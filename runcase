#!/usr/bin/env bash
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Initialize variables for Python flag and problem names
python_flag=false
names=()

# Process command line options and arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
    -py)
      python_flag=true
      shift
      ;;
    *)
      problem_names+=("$1")
      shift
      ;;
  esac
done

# Check if problem_names array is not empty
if [ ${#problem_names[@]} -eq 0 ]; then
  echo "Error: Problem name(s) are required."
  echo "Usage: $0 [-py] <problem_name(s)>"
  exit 1
fi

prob_name=${problem_names[0]}
test_name=$prob_name

if [ "$python_flag" = false ]; then
  VERSION=c++17
  echo Compiling problem.cc with $VERSION...
  g++ -std=$VERSION -O2 -Wall -DLOCAL $prob_name.cc -o $prob_name
fi

i=0
passed=0

if [ ${#problem_names[@]} -gt 1 ]; then
  test_name=${problem_names[1]}
fi

for Input in $test_name-*.in
do
  i=$((i+1))

  suffix=${Input#*$test_name-}
  test_case=${suffix%.in}
  Output=$test_name-$test_case.out

  start=`date +%s.%N`
  if [ $python_flag = true ]; then
    python3 $prob_name.py < $Input > res
  else
    ./$prob_name < $Input > res
  fi
  end=`date +%s.%N`
  runtime=$(echo "($end - $start)*1000" | bc)

  echo -e "${ORANGE}Case #$i:${NC}"
  echo "Runing with $Input"
  printf "Time: %.0f ms\n" $runtime
  echo "-------------------------"
  echo -e "${BLUE}Input:${NC}"
  cat $Input
  echo -e "${BLUE}Output:${NC}"
  cat res
  echo -e "${BLUE}Expected:${NC}"
  cat $Output
  echo "-------------------------"

  if !(diff -B -Z res $Output > /dev/null)
  then
      echo -e "${RED}Wrong answer on test $i${NC}\n"
  else
      echo -e "${GREEN}Passed!${NC}\n"
      passed=$((passed+1))
  fi
done

if [ $passed -eq $i ]
then
  echo -e "${GREEN}$passed / $i tests Passed${NC}"
else
  echo -e "${RED}$passed / $i tests Passed${NC}"
fi

rm res

if [ -e "$prob_name.cc" ]
then
  rm $prob_name
fi

